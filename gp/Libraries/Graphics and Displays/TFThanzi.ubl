module TFThanzi
author 'Patch & Rang'
version 1 9 
depends TFT Strings Files NeoPixel NeoPanel 
description '使用汉字取模数据在TFT屏幕上显示汉字
v1.9 增加指定字体功能，可以切换字体显示
v1.8 增加了英文字库，使英文可以和中文混排
v1.7 drawChar方法去掉了写字前刷固定黑色背景，增加宽度参数和换行功能
v1.6 增加了neoPanel点阵屏上汉字滚动的方法
v1.5 增加对neoPanel和OLED的支持
v1.4 增加二进制字库文件支持
v1.3 增加了一个大写英文字母字体
v1.2 增加了通过文件保存和提取字模的功能
v1.1 增加了颜色设置，增加了几个汉字和数字示例
-------
字库文件下载地址：
中文：https://www.go2crm.cn/go_static/cn.font
英文：https://www.go2crm.cn/go_static/en.font
宋体：https://www.go2crm.cn/go_static/st.font
仿宋：https://www.go2crm.cn/go_static/fs.font
取模工具：
16X16点阵汉字自动取模 https://create.codelab.club/projects/53070
16X16点阵设计工具 https://create.codelab.club/projects/66585
8X16点阵设计工具 https://create.codelab.club/projects/85344/
-------
介绍视频：
https://www.bilibili.com/video/BV1R14y1172r/

可以在示例的other分类找到此库的使用示例-chineseDisplay
'
variables _scrollStop _scrollPause _fontWidth _fontHeight _xx _yy _charFont _chars 

  spec ' ' 'draw' 'draw _ x _ y _ size _ _ neo _' 'str num num num color auto' '10100042440008E416151454541414F4040000402011011F111115155151311F1101' 0 0 1 nil ''
  spec ' ' 'drawChar' 'drawChar _ x _ y _ size _ _ fileName _ width _' 'str num num num color str num' '汉字' 10 10 2 nil 'st.font' 100
  spec ' ' 'scrollHanzi' 'scrollHanzi _ color _ beginX _ neoPin _' 'auto color auto num' '汉字' nil '10' 12
  spec ' ' 'drawSample' 'drawSample _ y _ size _ _' 'auto auto auto color' '0' '0' '1'
  spec ' ' 'saveFile' 'saveFile _ code _' 'str str' 'FileName' 'code'
  spec 'r' 'dec2hex' 'dec2hex _' 'auto' '10'
  space
  spec ' ' '_loadEnFont' '_loadEnFont'
  spec 'r' '_fromFontFile' '_fromFontFile _ withHeader _ fontFile _' 'auto bool str' '汉' true 'cn.font'
  spec 'r' '_getCodeFromFile' '_getCodeFromFile _' 'str' '海'
  spec 'r' '_sample' '_sample'

to '_fromFontFile' foo withHeader fontFile {
  if (and (('[data:unicodeAt]' 1 foo) >= 19968) (('[data:unicodeAt]' 1 foo) <= 40959)) {
    local 'f' (((('[data:unicodeAt]' 1 foo) - 19968) * 32) + 0)
    '[file:open]' fontFile
    '[file:setReadPosition]' f fontFile
    local 'a' ('[file:readBytes]' 32 fontFile)
    local 'fon' ''
    for i 32 {
      fon = ('[data:join]' fon (dec2hex (at i a)))
    }
    if withHeader {
      return ('[data:join]' '1010' fon)
    } else {
      return fon
    }
  }
  return ('[data:join]' '0810' '00000000000000000000000000000000')
}

to '_getCodeFromFile' file {
  comment '从文件读取字模，文件以要显示的汉字命名'
  if (('[data:find]' file ('file names')) > -1) {
    '[file:open]' file
    local 'var' ('[file:readLine]' file)
    '[file:close]' file
    return var
  } else {
    return ''
  }
}

to '_loadEnFont' {
  if (and ((size _chars) == (size _charFont)) ((size _chars) > 0)) {
  } else {
    _charFont = ('[data:makeList]')
    _chars = ('[data:makeList]')
    '[file:open]' 'en.font'
    local 'i' 0
    sayIt i
    repeatUntil ('[file:endOfFile]' 'en.font') {
      i += 1
      local 'var' ('[file:readLine]' 'en.font')
      if ((i % 2) == 1) {
        '[data:addLast]' var _chars
      } else {
        '[data:addLast]' var _charFont
      }
    }
    '[file:close]' 'en.font'
  }
}

to '_sample' {
  comment '两个示例汉字的16点阵字模'
  return ('[data:makeList]' '101000000000000000FE2020202020000000004040404040407F4040404040404000' '10100042440008E416151454541414F4040000402011011F111115155151311F1101')
}

to dec2hex dec {
  local 'hexDigits' '0123456789abcdef'
  if (dec == 0) {
    return ('[data:join]' ('[data:convertType]' 0 'string') ('[data:convertType]' 0 'string'))
  }
  local 'hexString' ''
  local 'num' dec
  repeatUntil (num <= 0) {
    local 'remainder' (num % 16)
    hexString = ('[data:join]' (at (remainder + 1) hexDigits) hexString)
    num = (num / 16)
  }
  if ((size hexString) < 2) {
    return ('[data:join]' '0' hexString)
  } else {
    return hexString
  }
}

to draw data x y size color neo {
  comment '本库核心的汉字显示方法，用法参看drawSample函数'
  local 'xx' 0
  local 'yy' -1
  local 'fbl' (hexToInt ('[data:join]' (at 1 data) (at 2 data)))
  for j ((size data) - 4) {
    if (1 == (j % (fbl * 2))) {
      xx = 0
      yy += 8
    }
    for i 4 {
      if ((((hexToInt (at (j + 4) data)) >> (4 - i)) & 1) == 1) {if (neo == 1) {
        local 'var' ('_neoPanel_indexForXY' (x + xx) (y + yy))
        if (and (1 <= var) (var <= (size _np_pixels))) {
          atPut var _np_pixels color
        }
      } else {
        '[tft:rect]' (x + (xx * size)) (y + (yy * size)) size size color
      }}
      yy += -1
    }
    if ((j % 2) == 0) {
      xx += 1
      yy = (yy + 8)
    }
  }
}

to drawChar foo x y size color filename width {
  comment '最后一个参数可以输入字体文件名以改变字体'
  foo = ('[data:convertType]' foo 'string')
  local 'var' ''
  _xx = x
  _yy = y
  for i (size foo) {
    if (and (('[data:unicodeAt]' 1 (at i foo)) >= 19968) (('[data:unicodeAt]' 1 (at i foo)) <= 40959)) {
      var = ('_fromFontFile' (at i foo) true filename)
    } else {
      '_loadEnFont'
      local 'var2' ('[data:find]' (at i foo) _chars)
      if (var2 > 0) {
        var = (at var2 _charFont)
      } else {
        var = ('[data:join]' '0810' '00000000000000000000000000000000')
      }
    }
    _fontWidth = (hexToInt ('[data:copyFromTo]' var 1 2))
    _fontHeight = (hexToInt ('[data:copyFromTo]' var 3 4))
    draw var _xx _yy size color
    _xx = (_xx + (size * _fontWidth))
    if (_xx > (width - _fontWidth)) {
      _xx = x
      _yy += ((_fontHeight / 3) + (size * _fontHeight))
    }
  }
}

to drawSample x y size color {
  comment '自带两个汉字的显示示例'
  for i (size ('_sample')) {
    '[tft:rect]' (x + ((i - 1) * (size * 16))) y (size * 16) (size * 16) (colorSwatch 0 0 0 255)
    draw (at i ('_sample')) (x + ((i - 1) * (size * 16))) y size color
  }
}

to saveFile fileName code {
  comment 'fileName是文件名，每个汉字对应一个以这个汉字命名的字模文件'
  '[file:delete]' fileName
  '[file:open]' fileName
  '[file:appendLine]' code fileName
  '[file:close]' fileName
}

to scrollHanzi hanzi color x neoPin {
  _scrollStop = 0
  _scrollPause = 0
  neoPanel_attach 16 16 neoPin
  local 'id' 1
  repeatUntil (and (x == -16) (id == (size hanzi))) {
    if (_scrollPause == 1) {waitUntil (or (_scrollPause == 0) (_scrollStop == 1))}
    if (_scrollStop == 0) {
      if (x == -16) {
        id += 1
        x += 16
      }
      _np_pixels = (newList 256 0)
      sayIt id
      draw ('_fromFontFile' (at id hanzi) true) x 0 1 color 1
      if (id < (size hanzi)) {
        draw ('_fromFontFile' (at (id + 1) hanzi) true) (x + 16) 0 1 color 1
      }
      '_NeoPixel_update'
      x += -1
    } else {
      stopTask
    }
  }
}
