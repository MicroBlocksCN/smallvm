module CoCube
author '梁帅'
version 1 3 
depends Tone Ringtone TFT Display 
tags 'cocube机器人' 
choices CarDirMenu '前进' '后退' '左转' '右转' 
choices MotorDirMenu '前进' '后退' 
description ''
variables speed 

  spec 'r' 'Battery Percentage' 'Battery Percentage'
  space
  spec 'r' 'position_X' 'positionX'
  spec 'r' 'position_Y' 'positionY'
  spec 'r' 'position_Yaw' 'positionYaw'
  space
  spec ' ' 'set TFT backlight' 'set TFT backlight _' 'bool' false
  spec ' ' 'draw Aruco Marker on TFT' 'draw Aruco Marker on TFT _' 'num' 0
  spec ' ' 'draw AprilTag on TFT' 'draw AprilTag on TFT _' 'num' 0
  space
  spec ' ' 'ControlLeftMotor' 'Control Left Motor _' 'num' 50
  spec ' ' 'ControlRightMotor' 'Control Right Motor _' 'num' 50
  space
  spec ' ' 'Move Forward' 'Move Forward _' 'num' 50
  spec ' ' 'Move Backward' 'Move Backward _' 'num' 50
  spec ' ' 'Turn Left' 'Turn Left _' 'num' 10
  spec ' ' 'Turn Right' 'Turn Right _' 'num' 10
  spec ' ' 'Motor Stop' 'Motor Stop'
  spec ' ' 'Motor Break' 'Motor Break'

to 'Battery Percentage' {
  return (minimum (((13 * ('[misc:rescale]' (analogReadOp 34) 0 1023 0 3300)) - 33000) / 90) 100)
}

to ControlLeftMotor speed {
  if (speed == 0) {
    digitalWriteOp 9 false
    digitalWriteOp 10 false
  } (speed > 0) {
    analogWriteOp 9 ('[misc:rescale]' speed 0 100 75 1023)
    digitalWriteOp 10 false
  } else {
    digitalWriteOp 9 false
    analogWriteOp 10 ('[misc:rescale]' (absoluteValue speed) 0 100 75 1023)
  }
}

to ControlRightMotor speed {
  if (speed == 0) {
    digitalWriteOp 26 false
    digitalWriteOp 25 false
  } (speed > 0) {
    analogWriteOp 26 ('[misc:rescale]' speed 0 100 75 1023)
    digitalWriteOp 25 false
  } else {
    digitalWriteOp 26 false
    analogWriteOp 25 ('[misc:rescale]' (absoluteValue speed) 0 100 75 1023)
  }
}

to 'Motor Break' {
  digitalWriteOp 9 true
  digitalWriteOp 10 true
  digitalWriteOp 26 true
  digitalWriteOp 25 true
  waitMillis 200
  digitalWriteOp 9 false
  digitalWriteOp 10 false
  digitalWriteOp 26 false
  digitalWriteOp 25 false
}

to 'Motor Stop' {
  ControlLeftMotor 0
  ControlRightMotor 0
}

to 'Move Backward' speed {
  ControlLeftMotor (0 - speed)
  ControlRightMotor (0 - speed)
}

to 'Move Forward' speed {
  ControlLeftMotor speed
  ControlRightMotor speed
}

to 'Turn Left' speed {
  ControlLeftMotor (0 - speed)
  ControlRightMotor speed
}

to 'Turn Right' speed {
  ControlLeftMotor speed
  ControlRightMotor (0 - speed)
}

to 'draw AprilTag on TFT' id {
  comment '0 <= id < 100'
  if (id >= 100) {
    sayIt '0 <= id < 100'
  } else {
    callCustomCommand '[tft:aprilTag]' ('[data:makeList]' id)
  }
}

to 'draw Aruco Marker on TFT' id {
  comment '0 <= id < 100'
  if (id >= 100) {
    sayIt '0 <= id < 100'
  } else {
    callCustomCommand '[tft:aruco]' ('[data:makeList]' id)
  }
}

to position_X {
  return (callCustomReporter '[sensors:position_x]')
}

to position_Y {
  return (callCustomReporter '[sensors:position_y]')
}

to position_Yaw {
  return (callCustomReporter '[sensors:position_yaw]')
}

to 'set TFT backlight' state {
  if state {
    '[tft:setBacklight]' 10
  } else {
    '[tft:setBacklight]' 0
  }
}

